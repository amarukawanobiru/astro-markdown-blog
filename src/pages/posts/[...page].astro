---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import { type GetStaticPathsOptions } from "astro";
import PageHeading from "@/components/PageHeading.astro";
import PostCard from "@/components/PostCard.astro";
import Pagination from "@/components/Pagination.astro";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const posts = await getCollection("posts");
  const filteredPosts = posts.filter((post) => post.data.draft);
  const sortedPosts = filteredPosts.sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
  );

  return paginate(sortedPosts, { pageSize: 3 });
};

const { page } = Astro.props;
---

<Layout title="ブログ">
  <main class="main-content">
    <PageHeading en="BLOG" ja="ブログ" />
    <div class="pagination-display">
      <span class="page-number">
        {page.total}
      </span>件中<span class="page-number">{page.start + 1}</span>件から<span
        class="page-number">{page.end + 1}</span
      >件を表示中
    </div>
    <ul class="list">
      {
        page.data.map((post) => (
          <li class="item">
            <PostCard
              slug={`/posts/${post.slug}`}
              cover={post.data.cover}
              title={post.data.title}
              description={post.data.description}
              pubDate={post.data.pubDate}
              lastModified={post.data.lastModified}
            />
          </li>
        ))
      }
    </ul>
    {
      page.total > page.data.length ? (
        <Pagination
          currentPage={page.currentPage}
          lastPage={page.lastPage}
          baseUrl="/posts"
        />
      ) : null
    }
  </main>
</Layout>
